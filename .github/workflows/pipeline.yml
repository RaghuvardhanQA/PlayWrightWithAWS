name: Run tests with Playwright
'on':
  push:
    branches:
      - main
permissions:
      id-token: write # This is required for aws oidc connection
      contents: read # This is required for actions/checkout
      pull-requests: write # This is required for gh bot to comment PR
      
env:
  TF_LOG: INFO
  AWS_REGION: ${{ secrets.AWS_REGION }}
  
jobs:
  deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: terraform
    steps:
    - name: Git checkout
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        role-to-assume: ${{ secrets.AWS_ROLE }}
        aws-region: ${{ secrets.AWS_REGION }}
        role-session-name: GitHub-OIDC-TERRAFORM

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.2.5

    - name: Terraform fmt
      run: terraform fmt -check
      continue-on-error: true

    - name: Terraform Init
      env:
        AWS_BUCKET_NAME: ${{ secrets.AWS_BUCKET_NAME }}
        AWS_BUCKET_KEY_NAME: ${{ secrets.AWS_BUCKET_KEY_NAME }}
      run: terraform init -backend-config="bucket=${AWS_BUCKET_NAME}" -backend-config="key=${AWS_BUCKET_KEY_NAME}" -backend-config="region=${AWS_REGION}"

    - name: Terraform Validate
      run: terraform validate -no-color

    - name: Terraform Plan
      run: terraform plan -no-color

    - name: Terraform Apply
      run: terraform apply -auto-approve -input=false
      
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version:
          - 16.x
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: 'Set up Node.js ${{ matrix.node-version }}'
        uses: actions/setup-node@v2
        with:
          node-version: '${{ matrix.node-version }}'
      - name: Install dependencies
        run: |
          npm ci
          npx playwright install
      - name: Run tests
        run: npm run test

